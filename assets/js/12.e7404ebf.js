(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{453:function(t,e,a){"use strict";a.r(e);var l=a(33),v=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"从c到c-过渡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从c到c-过渡"}},[t._v("#")]),t._v(" 从C到C++过渡")]),t._v(" "),a("p",[t._v("简单C程序：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    #include<stdio.h>\n    int main()\n    {\n        printf("Hello world\\n");\n        return 0;\n    }\n')])])]),a("p",[t._v("简单C++程序：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    #include<iostream>\n    using namespace std;\n    int main()\n    {\n        cout <<"Hello World"<<"\\n";\n        return 0;\n    }\n')])])]),a("h3",{attrs:{id:"区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#区别"}},[t._v("#")]),t._v(" 区别")]),t._v(" "),a("p",[t._v("首先，一点一点来对比一下，从第一行开始")]),t._v(" "),a("p",[t._v("相同：")]),t._v(" "),a("p",[t._v("1.#include是一个预处理指令，用来引入头文件"),a("br"),t._v("\n2.都包含了main()函数，代码从main()函数开始执行"),a("br"),t._v("\n3.return 0;语句表示退出程序")]),t._v(" "),a("p",[t._v("不同：")]),t._v(" "),a("p",[t._v("1.头文件的区别：C语言头文件一般为xxxx.h;而C++文件一般为cxxxx"),a("br"),t._v("\n2.C++多了一行using namespace std；这是在告诉编译器使用std命名空间，这是一个在C中未出现过的概念"),a("br"),t._v("\n3.输出形式的变化"),a("br"),t._v("\n4.endl，这将在每一行后插入一个换行符，<< 运算符用于向屏幕传多个值，sizeof() 函数用来获取各种数据类型的大小")]),t._v(" "),a("h2",{attrs:{id:"c-简单语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-简单语法"}},[t._v("#")]),t._v(" C++简单语法")]),t._v(" "),a("p",[t._v("预处理和C程序一样，都是#加上include"),a("br"),t._v("\n头文件 xxx.h改成cxxx")]),t._v(" "),a("p",[t._v("C++数据类型：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("布尔型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("bool")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("char")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("整型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("int")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("float")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("双浮点型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("double")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("无类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("void")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("宽字符型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("wchar_t")])])])]),t._v(" "),a("p",[a("code",[t._v("wchar_t : typedef short int wchar_t;")])]),t._v(" "),a("p",[t._v("所以wchar_t实际的空间和short int是一样的")]),t._v(" "),a("p",[t._v("一些基本类型可以使用一个或者多个类型修饰符进行修饰：signed unsigned short long")]),t._v(" "),a("p",[t._v("typedef可以用来为一个已有的类型取一个新的名字"),a("br"),t._v("\n例如：  "),a("code",[t._v("typedef int nose;")])]),t._v(" "),a("p",[t._v("那么"),a("code",[t._v("int m;")]),t._v(" 就可以变成 "),a("code",[t._v("nose m;")])]),t._v(" "),a("h3",{attrs:{id:"枚举类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[t._v("#")]),t._v(" 枚举类型")]),t._v(" "),a("p",[t._v("枚举类型(enumeration)是C++中的一种派生数据类型，它是由用户定义的若干枚举常量的集合。")]),t._v(" "),a("p",[t._v('如果一个变量只有几种可能的值，可以定义为枚举(enumeration)类型。所谓"枚举"是指将变量的值一一列举出来，变量的值只能在列举出来的值的范围内。\n创建枚举，需要使用关键字 enum。枚举类型的一般形式为：')]),t._v(" "),a("p",[t._v("enum 枚举名{\n标识符[=整型常数],\n标识符[=整型常数],\n...\n标识符[=整型常数]\n} 枚举变量;")]),t._v(" "),a("p",[t._v('如果枚举没有初始化, 即省掉"=整型常数"时, 则从第一个标识符开始。')]),t._v(" "),a("p",[t._v('例如，下面的代码定义了一个颜色枚举，变量 c 的类型为 color。最后，c 被赋值为 "blue"。')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("enum color { red, green, blue } c;\nc = blue;\n")])])]),a("p",[t._v("默认情况下，第一个名称的值为 0，第二个名称的值为 1，第三个名称的值为 2，以此类推。但是，您也可以给名称赋予一个特殊的值，只需要添加一个初始值即可。例如，在下面的枚举中，green 的值为 5。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("enum color { red, green=5, blue };\n")])])]),a("p",[t._v("在这里，blue 的值为 6，因为默认情况下，每个名称都会比它前面一个名称大 1，但 red 的值依然为 0。")]),t._v(" "),a("h3",{attrs:{id:"常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),a("h4",{attrs:{id:"整数常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数常量"}},[t._v("#")]),t._v(" 整数常量")]),t._v(" "),a("p",[t._v("整数常量可以是十进制、八进制或十六进制的常量。前缀指定基数：0x 或 0X 表示十六进制，0 表示八进制，不带前缀则默认表示十进制。")]),t._v(" "),a("p",[t._v("整数常量也可以带一个后缀，后缀是 U 和 L 的组合，U 表示无符号整数（unsigned），L 表示长整数（long）。后缀可以是大写，也可以是小写，U 和 L 的顺序任意。")]),t._v(" "),a("p",[t._v("下面列举几个整数常量的实例：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("212")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("合法的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("215u")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("合法的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0xFeel")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("合法的")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("078")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非法的，8不是八进制数字")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("032UU")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("非法的：不能重复后缀")])])])]),t._v(" "),a("p",[t._v("以下是各种类型的整数常量的实例：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("解释")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("85")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("十进制")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0213")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("八进制")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("0x4b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("十六进制")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("30")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("30u")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("无符号整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("30l")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("长整数")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("30ul")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("无符号长整数")])])])]),t._v(" "),a("h4",{attrs:{id:"浮点常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮点常量"}},[t._v("#")]),t._v(" 浮点常量")]),t._v(" "),a("p",[t._v("浮点常量由整数部分、小数点、小数部分和指数部分组成。您可以使用小数形式或者指数形式来表示浮点常量。")]),t._v(" "),a("p",[t._v("当使用小数形式表示时，必须包含整数部分、小数部分，或同时包含两者。当使用指数形式表示时， 必须包含小数点、指数，或同时包含两者。带符号的指数是用 e 或 E 引入的。")]),t._v(" "),a("p",[t._v("下面列举几个浮点常量的实例：\n3.14159       // 合法的\n314159E-5L    // 合法的\n510E          // 非法的：不完整的指数\n210f          // 非法的：没有小数或指数\n.e55          // 非法的：缺少整数或分数")]),t._v(" "),a("h4",{attrs:{id:"布尔常量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔常量"}},[t._v("#")]),t._v(" 布尔常量")]),t._v(" "),a("p",[t._v("布尔常量共有两个，它们都是标准的 C++ 关键字：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("true 值代表真。\nfalse 值代表假。\n")])])]),a("p",[t._v("我们不应把 true 的值看成 1，把 false 的值看成 0。")]),t._v(" "),a("h3",{attrs:{id:"const-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-关键字"}},[t._v("#")]),t._v(" const 关键字")]),t._v(" "),a("p",[t._v("用 const 前缀声明指定类型的常量，如下所示：")]),t._v(" "),a("p",[a("code",[t._v("const type variable = value;")])]),t._v(" "),a("p",[t._v("具体请看下面的实例：\n实例")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#include <iostream>\nusing namespace std;\n \nint main()\n{\n   const int  LENGTH = 10;\n   const int  WIDTH  = 5;\n   const char NEWLINE = '\\n';\n   int area;  \n   \n   area = LENGTH * WIDTH;\n   cout << area;\n   cout << NEWLINE;\n   return 0;\n}\n")])])]),a("p",[t._v("当上面的代码被编译和执行时，它会产生下列结果：")]),t._v(" "),a("p",[a("code",[t._v("50")])]),t._v(" "),a("h3",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("h4",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("p",[t._v("设置A = 1 ; B = 0;")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("实例")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("&&")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑与运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("(A && B) 为 false。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("'")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("'")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("！")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("逻辑非运算符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("!(A && B) 为 true。")])])])]),t._v(" "),a("h4",{attrs:{id:"杂项运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#杂项运算符"}},[t._v("#")]),t._v(" 杂项运算符")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sizeof")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Condition?X:Y")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])])])}),[],!1,null,null,null);e.default=v.exports}}]);